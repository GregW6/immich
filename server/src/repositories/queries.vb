explain analyze select "assets".*, "assets"."id", json_build_object('first', "exif"."exifImageHeight", 'last', "exif"."exifImageWidth") as "dimensions", to_json("stacked_assets") as "stack" from "assets" left join "exif" on "assets"."id" = "exif"."assetId" left join "asset_stack" on "asset_stack"."id" = "assets"."stackId" left join lateral (select "asset_stack".*, count("stacked") as "assetCount" from "assets" as "stacked" where "stacked"."stackId" = "asset_stack"."id" and "stacked"."deletedAt" is null and "stacked"."isArchived" = false group by "asset_stack"."id") as "stacked_assets" on "asset_stack"."id" is not null where "assets"."ownerId" = any(array['aac6bd26-37a2-4223-947a-2b67b0a63cb6']::uuid[]) and "assets"."isArchived" = false and ("asset_stack"."primaryAssetId" = "assets"."id" or "assets"."stackId" is null) and "assets"."deletedAt" is null and "assets"."isVisible" = true and date_trunc('MONTH', "localDateTime" at time zone 'UTC') at time zone 'UTC' = '2025-03-01T00:00:00.000Z' order by "assets"."localDateTime" desc